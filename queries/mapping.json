
PUT _ingest/pipeline/search-cna-pipeline
{
  "processors": [
    {
      "script": {
        "description": "Chunk body_content into sentences by looking for . followed by a space",
        "lang": "painless",
        "source": """
          String[] envSplit = /((?<!M(r|s|rs)\.)(?<=\.) |(?<=\!) |(?<=\?) )/.split(ctx['article_content']);
          ctx['passages'] = new ArrayList();
          int i = 0;
          boolean remaining = true;
          if (envSplit.length == 0) {
            return
          } else if (envSplit.length == 1) {
            Map passage = ['text': envSplit[0]];ctx['passages'].add(passage)
          } else {
            while (remaining) {
              Map passage = ['text': envSplit[i++]];
              while (i < envSplit.length && passage.text.length() + envSplit[i].length() < params.model_limit) {passage.text = passage.text + ' ' + envSplit[i++]}
              if (i == envSplit.length) {remaining = false}
              ctx['passages'].add(passage)
            }
          }
          """,
        "params": {
          "model_limit": 400
        }
      }
    },
    {
      "foreach": {
        "field": "passages",
        "processor": {
          "inference": {
            "field_map": {
              "_ingest._value.text": "text_field"
            },
            "model_id": ".elser_model_2_linux-x86_64",
            "target_field": "_ingest._value.vector"
          }
        }
      }
    }
  ]
}

PUT search-cna-nested/_mapping
{
  "properties": {
    "passages": {
      "type": "nested",
      "properties": {
        "dense": {
          "type": "dense_vector",
          "index_options": {
            "type": "int8_hnsw"
          }
        },
        "vector.predicted_value": {
          "type": "sparse_vector"
        },
        "text": {
          "type": "text"
        },
        "model_id": {
          "type": "keyword"
        }
      }
    }
  }
}


GET search-cna-nested/_search
{
  "query": {
    "nested": {
      "path": "passages",
      "query": {
        "text_expansion": {
          "passages.vector.predicted_value": {
            "model_id": ".elser_model_2_linux-x86_64",
            "model_text": "Members of Parliament"
          }
        }
      },
      "inner_hits": {
        "_source": false,
        "fields": [
          "passages.text"
        ]
      }
    }
  },
    "_source": false
}